{
  "name": "open-agent-platform",
  "author": "LangChain",
  "private": true,
  "workspaces": [
    "apps/*"
  ],
  "scripts": {
    "dev": "turbo dev",
    "build": "turbo build",
    "turbo:command": "turbo",
    "format": "turbo format",
    "lint": "turbo lint",
    "lint:fix": "turbo lint:fix",
    "deploy:agent:open_deep_research": "bash -lc 'cd apps/agents/open_deep_research && PORT=${PORT:-2025}; uvx --refresh --from \"langgraph-cli[inmem]\" --with-editable . --python 3.11 langgraph dev --allow-blocking --host 127.0.0.1 --port ${PORT:-2025}'",
    "deploy:agent:oap_langgraph_tools": "bash -lc 'cd apps/agents/oap-langgraph-tools-agent && PORT=${PORT:-2026}; uvx --refresh --from \"langgraph-cli[inmem]\" --with-editable . --python 3.11 langgraph dev --allow-blocking --host 127.0.0.1 --port ${PORT:-2026}'",
    "configure:web:rag": "bash -lc 'echo NEXT_PUBLIC_RAG_API_URL=http://localhost:9621 > apps/web/.env.local'",
    "deploy:rag:env": "[ -f apps/rag/.env ] && echo '✅ .env file already exists' || (cp apps/rag/env.azure-openai.example apps/rag/.env && echo '⚠️  Created .env file from template. Please edit apps/rag/.env with your Azure OpenAI credentials')",
    "deploy:rag:docker:build": "cd apps/rag && docker compose build --no-cache",
    "deploy:rag:docker:up": "cd apps/rag && docker compose up -d",
    "deploy:rag:docker:down": "cd apps/rag && docker compose down -v",
    "deploy:rag:docker:logs": "cd apps/rag && docker compose logs -f lightrag",
    "deploy:rag:docker:restart": "cd apps/rag && docker compose restart lightrag",
    "deploy:rag": "cd apps/rag && ./scripts/start_docker.sh",
    "deploy:rag:quick": "cd apps/rag && ./scripts/start_docker.sh --skip-tests",
    "dev:rag": "cd apps/rag && ./scripts/start_docker.sh && echo '\n🚀 LightRAG with Multimodal Support Started!\n📊 LightRAG API: http://localhost:9621\n🌐 Web UI: http://localhost:9621\n🐘 PostgreSQL: localhost:5432\n📁 Upload Excel, PowerPoint, Images!\n\nManagement:\n  View logs: pnpm run deploy:rag:docker:logs\n  Restart: pnpm run deploy:rag:docker:restart\n  Stop: pnpm run deploy:rag:docker:down'",
    "dev:rag:python": "bash -lc 'cd apps/rag && PORT=${PORT:-9621}; ([ -d venv ] || python -m venv venv) && source venv/bin/activate && pip install -e . && python -m lightrag.api.lightrag_server --port $PORT --host 0.0.0.0'",
    "stop:rag:webui": "bash -lc 'PORT=${PORT:-9621}; PID=$(lsof -ti tcp:$PORT || true); if [ -n \"$PID\" ]; then echo \"🔪 Stopping LightRAG on port $PORT (PID $PID)\"; kill -9 $PID || true; else echo \"No process on port $PORT\"; fi'",
    "start:rag:webui": "bash -lc 'cd apps/rag && PORT=${PORT:-9621} ./scripts/start_local.sh'"
  },
  "devDependencies": {
    "turbo": "^2.5.0",
    "typescript": "^5"
  },
  "packageManager": "pnpm@9.12.3",
  "dependencies": {
    "react-hook-form": "^7.56.3"
  }
}
